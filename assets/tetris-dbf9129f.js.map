{"version":3,"file":"tetris-dbf9129f.js","sources":["../../node_modules/@workadventure/quests/dist/quests.js","../../src/tetris.js"],"sourcesContent":["let r = \"https://admin.workadventu.re\";\nfunction c(e) {\n  r = e;\n}\nfunction n() {\n  const e = WA.player.userRoomToken;\n  if (e === void 0)\n    throw new Error(\n      \"No userRoomToken found. The quests plugin can only work with WorkAdventure SAAS edition (at https://play.workadventu.re).\"\n    );\n  return e;\n}\nasync function d(e) {\n  const t = new URL(`/api/quests/${e}`, r);\n  t.search = new URLSearchParams({ room: WA.room.id }).toString();\n  const o = await fetch(t, {\n    method: \"GET\",\n    headers: {\n      Authorization: n()\n    }\n  });\n  if (!o.ok)\n    throw new Error(`An error occurred. HTTP Code: ${o.status} ${o.statusText}.`);\n  return await o.json();\n}\nasync function w(e) {\n  const t = new URL(`/api/quests/${e}/leaderboard`, r);\n  t.search = new URLSearchParams({ room: WA.room.id }).toString();\n  const o = await fetch(t, {\n    method: \"GET\",\n    headers: {\n      Authorization: n()\n    }\n  });\n  if (!o.ok)\n    throw new Error(`An error occurred. HTTP Code: ${o.status} ${o.statusText}.`);\n  return await o.json();\n}\nfunction h(e) {\n  const t = new URL(`/quests/${e}/leaderboard`, r);\n  return t.search = new URLSearchParams({ room: WA.room.id, token: n() }).toString(), t;\n}\nasync function l(e, t) {\n  if (!WA.player.isLogged)\n    throw new Error(\"You must be logged to gain XP.\");\n  const o = new URL(`/api/quests/${e}/level-up`, r), a = await fetch(o, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: n()\n    },\n    body: JSON.stringify({ xp: t })\n  });\n  if (!a.ok)\n    throw new Error(`An error occurred. HTTP Code: ${a.status} ${a.statusText}.`);\n  const s = await a.json();\n  return s.awardedBadges.length > 0 && (async () => {\n    for (const i of s.awardedBadges)\n      await u(e, i);\n  })().catch((i) => {\n    console.error(i);\n  }), s;\n}\nasync function u(e, t) {\n  const o = new URL(`/quests/${e}/badge/${t}/congratulations`, r);\n  o.search = new URLSearchParams({ token: n() }).toString(), await WA.ui.website.open({\n    url: o.toString(),\n    position: {\n      vertical: \"middle\",\n      horizontal: \"middle\"\n    },\n    allowApi: !0,\n    visible: !0,\n    size: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  });\n}\nexport {\n  w as getLeaderboard,\n  h as getLeaderboardURL,\n  d as getQuest,\n  l as levelUp,\n  c as setQuestBaseUrl\n};\n","// https://tetris.fandom.com/wiki/Tetris_Guideline\n\n// get a random integer between the range of [min,max]\n// @see https://stackoverflow.com/a/1527820/2124254\nimport {levelUp} from \"@workadventure/quests\";\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// generate a new tetromino sequence\n// @see https://tetris.fandom.com/wiki/Random_Generator\nfunction generateSequence() {\n    const sequence = ['I', 'J', 'L', 'O', 'S', 'T', 'Z'];\n\n    while (sequence.length) {\n        const rand = getRandomInt(0, sequence.length - 1);\n        const name = sequence.splice(rand, 1)[0];\n        tetrominoSequence.push(name);\n    }\n}\n\n// get the next tetromino in the sequence\nfunction getNextTetromino() {\n    if (tetrominoSequence.length === 0) {\n        generateSequence();\n    }\n\n    const name = tetrominoSequence.pop();\n    const matrix = tetrominos[name];\n\n    // I and O start centered, all others start in left-middle\n    const col = playfield[0].length / 2 - Math.ceil(matrix[0].length / 2);\n\n    // I starts on row 21 (-1), all others start on row 22 (-2)\n    const row = name === 'I' ? -1 : -2;\n\n    return {\n        name: name,      // name of the piece (L, O, etc.)\n        matrix: matrix,  // the current rotation matrix\n        row: row,        // current row (starts offscreen)\n        col: col         // current col\n    };\n}\n\n// rotate an NxN matrix 90deg\n// @see https://codereview.stackexchange.com/a/186834\nfunction rotate(matrix) {\n    const N = matrix.length - 1;\n    const result = matrix.map((row, i) =>\n        row.map((val, j) => matrix[N - j][i])\n    );\n\n    return result;\n}\n\n// check to see if the new matrix/row/col is valid\nfunction isValidMove(matrix, cellRow, cellCol) {\n    for (let row = 0; row < matrix.length; row++) {\n        for (let col = 0; col < matrix[row].length; col++) {\n            if (matrix[row][col] && (\n                // outside the game bounds\n                cellCol + col < 0 ||\n                cellCol + col >= playfield[0].length ||\n                cellRow + row >= playfield.length ||\n                // collides with another piece\n                playfield[cellRow + row][cellCol + col])\n            ) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n// place the tetromino on the playfield\nfunction placeTetromino() {\n    for (let row = 0; row < tetromino.matrix.length; row++) {\n        for (let col = 0; col < tetromino.matrix[row].length; col++) {\n            if (tetromino.matrix[row][col]) {\n\n                // game over if piece has any part offscreen\n                if (tetromino.row + row < 0) {\n                    return showGameOver();\n                }\n\n                playfield[tetromino.row + row][tetromino.col + col] = tetromino.name;\n            }\n        }\n    }\n\n    // check for line clears starting from the bottom and working our way up\n    let points = 0;\n    for (let row = playfield.length - 1; row >= 0; ) {\n        if (playfield[row].every(cell => !!cell)) {\n            points++;\n            // drop every row above this one\n            for (let r = row; r >= 0; r--) {\n                for (let c = 0; c < playfield[r].length; c++) {\n                    playfield[r][c] = playfield[r-1][c];\n                }\n            }\n        }\n        else {\n            row--;\n        }\n    }\n    if (points > 0) {\n        levelUp(\"arcade\", points).catch(e => console.error(e));\n    }\n\n    tetromino = getNextTetromino();\n}\n\n// show the game over screen\nfunction showGameOver() {\n    cancelAnimationFrame(rAF);\n    gameOver = true;\n\n    context.fillStyle = 'black';\n    context.globalAlpha = 0.75;\n    context.fillRect(0, canvas.height / 2 - 30, canvas.width, 60);\n\n    context.globalAlpha = 1;\n    context.fillStyle = 'white';\n    context.font = '36px monospace';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillText('GAME OVER!', canvas.width / 2, canvas.height / 2);\n}\n\nconst canvas = document.getElementById('game');\nconst context = canvas.getContext('2d');\nconst grid = 32;\nconst tetrominoSequence = [];\n\n// keep track of what is in every cell of the game using a 2d array\n// tetris playfield is 10x20, with a few rows offscreen\nconst playfield = [];\n\n// populate the empty state\nfor (let row = -2; row < 20; row++) {\n    playfield[row] = [];\n\n    for (let col = 0; col < 10; col++) {\n        playfield[row][col] = 0;\n    }\n}\n\n// how to draw each tetromino\n// @see https://tetris.fandom.com/wiki/SRS\nconst tetrominos = {\n    'I': [\n        [0,0,0,0],\n        [1,1,1,1],\n        [0,0,0,0],\n        [0,0,0,0]\n    ],\n    'J': [\n        [1,0,0],\n        [1,1,1],\n        [0,0,0],\n    ],\n    'L': [\n        [0,0,1],\n        [1,1,1],\n        [0,0,0],\n    ],\n    'O': [\n        [1,1],\n        [1,1],\n    ],\n    'S': [\n        [0,1,1],\n        [1,1,0],\n        [0,0,0],\n    ],\n    'Z': [\n        [1,1,0],\n        [0,1,1],\n        [0,0,0],\n    ],\n    'T': [\n        [0,1,0],\n        [1,1,1],\n        [0,0,0],\n    ]\n};\n\n// color of each tetromino\nconst colors = {\n    'I': 'cyan',\n    'O': 'yellow',\n    'T': 'purple',\n    'S': 'green',\n    'Z': 'red',\n    'J': 'blue',\n    'L': 'orange'\n};\n\nlet count = 0;\nlet tetromino = getNextTetromino();\nlet rAF = null;  // keep track of the animation frame so we can cancel it\nlet gameOver = false;\n\n// game loop\nfunction loop() {\n    rAF = requestAnimationFrame(loop);\n    context.clearRect(0,0,canvas.width,canvas.height);\n\n    // draw the playfield\n    for (let row = 0; row < 20; row++) {\n        for (let col = 0; col < 10; col++) {\n            if (playfield[row][col]) {\n                const name = playfield[row][col];\n                context.fillStyle = colors[name];\n\n                // drawing 1 px smaller than the grid creates a grid effect\n                context.fillRect(col * grid, row * grid, grid-1, grid-1);\n            }\n        }\n    }\n\n    // draw the active tetromino\n    if (tetromino) {\n\n        // tetromino falls every 35 frames\n        if (++count > 35) {\n            tetromino.row++;\n            count = 0;\n\n            // place piece if it runs into anything\n            if (!isValidMove(tetromino.matrix, tetromino.row, tetromino.col)) {\n                tetromino.row--;\n                placeTetromino();\n            }\n        }\n\n        context.fillStyle = colors[tetromino.name];\n\n        for (let row = 0; row < tetromino.matrix.length; row++) {\n            for (let col = 0; col < tetromino.matrix[row].length; col++) {\n                if (tetromino.matrix[row][col]) {\n\n                    // drawing 1 px smaller than the grid creates a grid effect\n                    context.fillRect((tetromino.col + col) * grid, (tetromino.row + row) * grid, grid-1, grid-1);\n                }\n            }\n        }\n    }\n}\n\n// listen to keyboard events to move the active tetromino\ndocument.addEventListener('keydown', function(e) {\n    if (gameOver) return;\n\n    // left and right arrow keys (move)\n    if (e.which === 37 || e.which === 39) {\n        const col = e.which === 37\n            ? tetromino.col - 1\n            : tetromino.col + 1;\n\n        if (isValidMove(tetromino.matrix, tetromino.row, col)) {\n            tetromino.col = col;\n        }\n    }\n\n    // up arrow key (rotate)\n    if (e.which === 38) {\n        const matrix = rotate(tetromino.matrix);\n        if (isValidMove(matrix, tetromino.row, tetromino.col)) {\n            tetromino.matrix = matrix;\n        }\n    }\n\n    // down arrow key (drop)\n    if(e.which === 40) {\n        const row = tetromino.row + 1;\n\n        if (!isValidMove(tetromino.matrix, row, tetromino.col)) {\n            tetromino.row = row - 1;\n\n            placeTetromino();\n            return;\n        }\n\n        tetromino.row = row;\n    }\n});\n\n// start the game\nrAF = requestAnimationFrame(loop);"],"names":["r","n","e","l","t","o","a","s","i","u","getRandomInt","min","max","generateSequence","sequence","rand","name","tetrominoSequence","getNextTetromino","matrix","tetrominos","col","playfield","rotate","N","row","val","j","isValidMove","cellRow","cellCol","placeTetromino","tetromino","showGameOver","points","cell","c","levelUp","rAF","gameOver","context","canvas","grid","colors","count","loop"],"mappings":"ssBAAA,IAAIA,EAAI,+BAIR,SAASC,GAAI,CACX,MAAMC,EAAI,GAAG,OAAO,cACpB,GAAIA,IAAM,OACR,MAAM,IAAI,MACR,2HACN,EACE,OAAOA,CACT,CA+BA,eAAeC,EAAED,EAAGE,EAAG,CACrB,GAAI,CAAC,GAAG,OAAO,SACb,MAAM,IAAI,MAAM,gCAAgC,EAClD,MAAMC,EAAI,IAAI,IAAI,eAAeH,CAAC,YAAaF,CAAC,EAAGM,EAAI,MAAM,MAAMD,EAAG,CACpE,OAAQ,OACR,QAAS,CACP,OAAQ,mBACR,eAAgB,mBAChB,cAAeJ,EAAG,CACnB,EACD,KAAM,KAAK,UAAU,CAAE,GAAIG,CAAC,CAAE,CAClC,CAAG,EACD,GAAI,CAACE,EAAE,GACL,MAAM,IAAI,MAAM,iCAAiCA,EAAE,MAAM,IAAIA,EAAE,UAAU,GAAG,EAC9E,MAAMC,EAAI,MAAMD,EAAE,OAClB,OAAOC,EAAE,cAAc,OAAS,IAAM,SAAY,CAChD,UAAWC,KAAKD,EAAE,cAChB,MAAME,EAAEP,EAAGM,CAAC,CAClB,KAAO,MAAOA,GAAM,CAChB,QAAQ,MAAMA,CAAC,CAChB,CAAA,EAAGD,CACN,CACA,eAAeE,EAAEP,EAAGE,EAAG,CACrB,MAAMC,EAAI,IAAI,IAAI,WAAWH,CAAC,UAAUE,CAAC,mBAAoBJ,CAAC,EAC9DK,EAAE,OAAS,IAAI,gBAAgB,CAAE,MAAOJ,EAAG,CAAA,CAAE,EAAE,SAAU,EAAE,MAAM,GAAG,GAAG,QAAQ,KAAK,CAClF,IAAKI,EAAE,SAAU,EACjB,SAAU,CACR,SAAU,SACV,WAAY,QACb,EACD,SAAU,GACV,QAAS,GACT,KAAM,CACJ,MAAO,OACP,OAAQ,MACT,CACL,CAAG,CACH,CCzEA,SAASK,EAAaC,EAAKC,EAAK,CAC5B,OAAAD,EAAM,KAAK,KAAKA,CAAG,EACnBC,EAAM,KAAK,MAAMA,CAAG,EAEb,KAAK,MAAM,KAAK,OAAM,GAAMA,EAAMD,EAAM,EAAE,EAAIA,CACzD,CAIA,SAASE,GAAmB,CACxB,MAAMC,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAEnD,KAAOA,EAAS,QAAQ,CACpB,MAAMC,EAAOL,EAAa,EAAGI,EAAS,OAAS,CAAC,EAC1CE,EAAOF,EAAS,OAAOC,EAAM,CAAC,EAAE,CAAC,EACvCE,EAAkB,KAAKD,CAAI,CAC9B,CACL,CAGA,SAASE,GAAmB,CACpBD,EAAkB,SAAW,GAC7BJ,IAGJ,MAAMG,EAAOC,EAAkB,MACzBE,EAASC,EAAWJ,CAAI,EAGxBK,EAAMC,EAAU,CAAC,EAAE,OAAS,EAAI,KAAK,KAAKH,EAAO,CAAC,EAAE,OAAS,CAAC,EAKpE,MAAO,CACH,KAAMH,EACN,OAAQG,EACR,IALQH,IAAS,IAAM,GAAK,GAM5B,IAAKK,CACb,CACA,CAIA,SAASE,EAAOJ,EAAQ,CACpB,MAAMK,EAAIL,EAAO,OAAS,EAK1B,OAJeA,EAAO,IAAI,CAACM,EAAKjB,IAC5BiB,EAAI,IAAI,CAACC,EAAKC,IAAMR,EAAOK,EAAIG,CAAC,EAAEnB,CAAC,CAAC,CAC5C,CAGA,CAGA,SAASoB,EAAYT,EAAQU,EAASC,EAAS,CAC3C,QAASL,EAAM,EAAGA,EAAMN,EAAO,OAAQM,IACnC,QAASJ,EAAM,EAAGA,EAAMF,EAAOM,CAAG,EAAE,OAAQJ,IACxC,GAAIF,EAAOM,CAAG,EAAEJ,CAAG,IAEfS,EAAUT,EAAM,GAChBS,EAAUT,GAAOC,EAAU,CAAC,EAAE,QAC9BO,EAAUJ,GAAOH,EAAU,QAE3BA,EAAUO,EAAUJ,CAAG,EAAEK,EAAUT,CAAG,GAEtC,MAAO,GAKnB,MAAO,EACX,CAGA,SAASU,GAAiB,CACtB,QAASN,EAAM,EAAGA,EAAMO,EAAU,OAAO,OAAQP,IAC7C,QAASJ,EAAM,EAAGA,EAAMW,EAAU,OAAOP,CAAG,EAAE,OAAQJ,IAClD,GAAIW,EAAU,OAAOP,CAAG,EAAEJ,CAAG,EAAG,CAG5B,GAAIW,EAAU,IAAMP,EAAM,EACtB,OAAOQ,EAAY,EAGvBX,EAAUU,EAAU,IAAMP,CAAG,EAAEO,EAAU,IAAMX,CAAG,EAAIW,EAAU,IACnE,CAKT,IAAIE,EAAS,EACb,QAAST,EAAMH,EAAU,OAAS,EAAGG,GAAO,GACxC,GAAIH,EAAUG,CAAG,EAAE,MAAMU,GAAQ,CAAC,CAACA,CAAI,EAAG,CACtCD,IAEA,QAAS,EAAIT,EAAK,GAAK,EAAG,IACtB,QAASW,EAAI,EAAGA,EAAId,EAAU,CAAC,EAAE,OAAQc,IACrCd,EAAU,CAAC,EAAEc,CAAC,EAAId,EAAU,EAAE,CAAC,EAAEc,CAAC,CAG7C,MAEGX,IAGJS,EAAS,GACTG,EAAQ,SAAUH,CAAM,EAAE,MAAM,GAAK,QAAQ,MAAM,CAAC,CAAC,EAGzDF,EAAYd,EAAgB,CAChC,CAGA,SAASe,GAAe,CACpB,qBAAqBK,CAAG,EACxBC,EAAW,GAEXC,EAAQ,UAAY,QACpBA,EAAQ,YAAc,IACtBA,EAAQ,SAAS,EAAGC,EAAO,OAAS,EAAI,GAAIA,EAAO,MAAO,EAAE,EAE5DD,EAAQ,YAAc,EACtBA,EAAQ,UAAY,QACpBA,EAAQ,KAAO,iBACfA,EAAQ,UAAY,SACpBA,EAAQ,aAAe,SACvBA,EAAQ,SAAS,aAAcC,EAAO,MAAQ,EAAGA,EAAO,OAAS,CAAC,CACtE,CAEA,MAAMA,EAAS,SAAS,eAAe,MAAM,EACvCD,EAAUC,EAAO,WAAW,IAAI,EAChCC,EAAO,GACPzB,EAAoB,CAAA,EAIpBK,EAAY,CAAA,EAGlB,QAASG,EAAM,GAAIA,EAAM,GAAIA,IAAO,CAChCH,EAAUG,CAAG,EAAI,GAEjB,QAASJ,EAAM,EAAGA,EAAM,GAAIA,IACxBC,EAAUG,CAAG,EAAEJ,CAAG,EAAI,CAE9B,CAIA,MAAMD,EAAa,CACf,EAAK,CACD,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,CACX,EACD,EAAK,CACD,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,CACT,EACD,EAAK,CACD,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,CACT,EACD,EAAK,CACD,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,CACP,EACD,EAAK,CACD,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,CACT,EACD,EAAK,CACD,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,CACT,EACD,EAAK,CACD,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,EACN,CAAC,EAAE,EAAE,CAAC,CACT,CACL,EAGMuB,EAAS,CACX,EAAK,OACL,EAAK,SACL,EAAK,SACL,EAAK,QACL,EAAK,MACL,EAAK,OACL,EAAK,QACT,EAEA,IAAIC,EAAQ,EACRZ,EAAYd,EAAgB,EAC5BoB,EAAM,KACNC,EAAW,GAGf,SAASM,GAAO,CACZP,EAAM,sBAAsBO,CAAI,EAChCL,EAAQ,UAAU,EAAE,EAAEC,EAAO,MAAMA,EAAO,MAAM,EAGhD,QAAShB,EAAM,EAAGA,EAAM,GAAIA,IACxB,QAASJ,EAAM,EAAGA,EAAM,GAAIA,IACxB,GAAIC,EAAUG,CAAG,EAAEJ,CAAG,EAAG,CACrB,MAAML,EAAOM,EAAUG,CAAG,EAAEJ,CAAG,EAC/BmB,EAAQ,UAAYG,EAAO3B,CAAI,EAG/BwB,EAAQ,SAASnB,EAAMqB,EAAMjB,EAAMiB,EAAMA,EAAK,EAAGA,EAAK,CAAC,CAC1D,CAKT,GAAIV,EAAW,CAGP,EAAEY,EAAQ,KACVZ,EAAU,MACVY,EAAQ,EAGHhB,EAAYI,EAAU,OAAQA,EAAU,IAAKA,EAAU,GAAG,IAC3DA,EAAU,MACVD,MAIRS,EAAQ,UAAYG,EAAOX,EAAU,IAAI,EAEzC,QAASP,EAAM,EAAGA,EAAMO,EAAU,OAAO,OAAQP,IAC7C,QAASJ,EAAM,EAAGA,EAAMW,EAAU,OAAOP,CAAG,EAAE,OAAQJ,IAC9CW,EAAU,OAAOP,CAAG,EAAEJ,CAAG,GAGzBmB,EAAQ,UAAUR,EAAU,IAAMX,GAAOqB,GAAOV,EAAU,IAAMP,GAAOiB,EAAMA,EAAK,EAAGA,EAAK,CAAC,CAI1G,CACL,CAGA,SAAS,iBAAiB,UAAW,SAASxC,EAAG,CAC7C,GAAI,CAAAqC,EAGJ,IAAIrC,EAAE,QAAU,IAAMA,EAAE,QAAU,GAAI,CAClC,MAAMmB,EAAMnB,EAAE,QAAU,GAClB8B,EAAU,IAAM,EAChBA,EAAU,IAAM,EAElBJ,EAAYI,EAAU,OAAQA,EAAU,IAAKX,CAAG,IAChDW,EAAU,IAAMX,EAEvB,CAGD,GAAInB,EAAE,QAAU,GAAI,CAChB,MAAMiB,EAASI,EAAOS,EAAU,MAAM,EAClCJ,EAAYT,EAAQa,EAAU,IAAKA,EAAU,GAAG,IAChDA,EAAU,OAASb,EAE1B,CAGD,GAAGjB,EAAE,QAAU,GAAI,CACf,MAAMuB,EAAMO,EAAU,IAAM,EAE5B,GAAI,CAACJ,EAAYI,EAAU,OAAQP,EAAKO,EAAU,GAAG,EAAG,CACpDA,EAAU,IAAMP,EAAM,EAEtBM,IACA,MACH,CAEDC,EAAU,IAAMP,CACnB,EACL,CAAC,EAGDa,EAAM,sBAAsBO,CAAI","x_google_ignoreList":[0]}